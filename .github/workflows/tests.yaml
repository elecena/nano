name: phpunit
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-versions:
        - '8.3'
        - '8.4'

    services:
      mysql:
        image: mysql:8.0.39
        env:
          # root password is empty
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
        - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      # https://github.com/postmanlabs/httpbin
      # https://httpbin.org/
      httpbin:
        # https://hub.docker.com/r/kennethreitz/httpbin/
        image: kennethreitz/httpbin
        ports:
        - "5555:80"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # https://hub.docker.com/_/redis/
    - name: Start the Redis container
      env:
        REDIS_PASSWORD: qwerty
        REDIS_VERSION: 7.4.2
      run: |
        docker run -d -p 6379:6379 redis:${REDIS_VERSION}-alpine redis-server --requirepass ${REDIS_PASSWORD} --port 6379

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug

    - name: Print some details about PHP
      run: |
        php -v
        php -m
        php -i  | grep -A25 -i "gd support"

    - name: Get composer cache directory
      id: composer-cache-directory
      run: |
        composer config cache-dir
        echo "::set-output name=dir::$(composer config cache-dir)"
    - name: composer cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache-directory.outputs.dir }}
        key: php-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-${{ matrix.php-versions }}-composer

    - name: Compose setup
      run: |
        composer validate
        composer check-platform-reqs
        composer dump-autoload
        composer install --no-interaction

    - name: Test the code
      run: composer run coverage

    - name: Upload coverage results to Coveralls
      if: matrix.php-versions == '8.2'
      continue-on-error: true  # do not fail on Coveralls uploads
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        composer global require php-coveralls/php-coveralls
        php-coveralls --coverage_clover=.coverage.xml --json_path=/tmp/coverage.json -v
